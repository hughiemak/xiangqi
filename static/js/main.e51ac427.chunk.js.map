{"version":3,"sources":["serviceWorker.js","components/Piece.js","helpers/getPlayers.js","helpers/getChessType.js","components/King.js","components/Advisor.js","components/Elephant.js","components/Soldier.js","components/Chariot.js","components/Cannon.js","components/Horse.js","helpers/getComponentByChessType.js","components/Square.js","components/Board.js","helpers/getChess.js","helpers/initChessBoard.js","helpers/getMovePossibleByChessType.js","helpers/getPieceByCoord.js","helpers/getMoveOutcome.js","components/ui/Board.js","components/ChessSquare.js","components/ChessHolder.js","helpers/getDefaultHolderContent.js","components/Game.js","helpers/getEmptyHolderContent.js","helpers/getOutcomeAfterAddPiece.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","Piece","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","normalBGColor","highlightedBGColor","highlight","setState","unhighlight","state","backgroundColor","react_default","a","createElement","className","style","borderColor","player","color","text","React","Component","players","freeze","Red","Black","getPlayers","chessType","King","Advisor","Elephant","Cannon","Horse","Chariot","Soldier","getChessType","Piece_Piece","src","dest","xDiff","Math","abs","x","yDiff","y","getChessComponent","piece","King_King","Advisor_Advisor","Elephant_Elephant","Cannon_Cannon","Horse_Horse","Chariot_Chariot","Soldier_Soldier","Sqaure","onClick","assertThisInitialized","hasPiece","onFocus","console","log","select","isSelected","unselect","coord","prevProps","getComponentByChessType","fn","Board","squares","key","selected","_this2","Square_Sqaure","sq","setClick","click","clickChild","board","squareRows","toString","push","renderSquare","getChess","holderPosition","initChessBoard","auto","hasPieceBetween","getDiffFromSrcDest","yDirection","getDirectionFromSrcDest","yDir","i","xDirection","xDir","sign","getPieceByCoord","getMoveOutcome","newSquares","JSON","parse","stringify","ChessSquare","handleClick","id","onSelect","data","holderContent","test","square","objectSpread","length","ChessHolder","sqData","onPieceSelected","removePiece","row","ChessSquare_ChessSquare","generateRow","generateRows","copy","getDefaultHolderContent","Game","enterAutoInitMode","redHolderContent","blackHolderContent","turn","enterCustomMode","onChessHolderPieceSelected","selectedHolderSqData","onAutoStartBtnClicked","onCustomizeBtnClicked","isSelectingChess","selectedSquare","squreHavePiece","srcPeice","direction","destPiece","dir","checkSpotY","checkSpotX","getMovePossibleByChessType","outcome","toggleTurn","getOutcomeAfterAddPiece","addPieceToBoard","ChessHolder_ChessHolder","ui_Board_Board","Board_Board","holderSqData","ReactDOM","render","Game_Game","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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AKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,m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","file":"static/js/main.e51ac427.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport { testNameToKey } from \"jest-snapshot/build/utils\";\n\nexport default class Piece extends React.Component {\n  normalBGColor = \"white\";\n\n  highlightedBGColor = \"#cccccc\";\n\n  constructor(props) {\n    super(props);\n\n    this.state = { backgroundColor: this.normalBGColor, highlight: false };\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          this.state.highlight ? \"highlight-piece\" : \"unhighlight-square\"\n        }\n      >\n        <div\n          className=\"piece\"\n          style={{\n            backgroundColor: this.state.backgroundColor,\n            borderColor: this.props.player,\n            color: this.props.player\n          }}\n          // onClick={this.highlight}\n        >\n          {this.props.text}\n        </div>\n      </div>\n    );\n  }\n\n  highlight = () => {\n    this.setState({ highlight: true });\n  };\n\n  unhighlight = () => {\n    this.setState({ highlight: false });\n  };\n}\n","import React from \"react\";\n\nvar players = Object.freeze({ Red: \"red\", Black: \"black\" });\n\nexport default function getPlayers() {\n  return players;\n}\n","import React from \"react\";\nimport getPlayers from \"../helpers/getPlayers\";\nimport King from \"../components/King\";\n\nvar chessType = Object.freeze({\n  King: 1,\n  Advisor: 2,\n  Elephant: 3,\n  Cannon: 4,\n  Horse: 5,\n  Chariot: 6,\n  Soldier: 7\n});\n\n// exports.getChessType = function() {\n//   return chessType;\n// };\n\nexport default function getChessType() {\n  return chessType;\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class King extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"帥\" : \"將\"}\n        player={this.props.player}\n      />\n    );\n  }\n\n  isMovePossible(src, dest) {\n    const xDiff = Math.abs(dest.x - src.x);\n    const yDiff = Math.abs(dest.y - src.y);\n\n    return (xDiff == 0 || xDiff == 1) && (yDiff == 0 || yDiff == 1);\n  }\n\n  getChessType() {\n    return getChessType().King;\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Advisor extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"仕\" : \"士\"}\n        player={this.props.player}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Elephant extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"相\" : \"象\"}\n        player={this.props.player}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Soldier extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"兵\" : \"卒\"}\n        player={this.props.player}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Chariot extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"俥\" : \"車\"}\n        player={this.props.player}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Cannon extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"炮\" : \"砲\"}\n        player={this.props.player}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Horse extends Piece {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Piece\n        text={this.props.player === getPlayers().Red ? \"傌\" : \"馬\"}\n        player={this.props.player}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport King from \"../components/King\";\nimport Advisor from \"../components/Advisor\";\nimport getChessType from \"../helpers/getChessType\";\nimport Elephant from \"../components/Elephant\";\nimport Soldier from \"../components/Soldier\";\nimport Chariot from \"../components/Chariot\";\nimport Cannon from \"../components/Cannon\";\nimport Horse from \"../components/Horse\";\n\nexport default function getChessComponent(piece) {\n  // console.log(\"piece: \" + piece);\n  if (piece == null) {\n    return null;\n  } else {\n    const player = piece.player;\n\n    switch (piece.chessType) {\n      case getChessType().King:\n        //   console.log(\"HAVE KING!\");\n        return <King player={player} />;\n        break;\n      case getChessType().Advisor:\n        return <Advisor player={player} />;\n      case getChessType().Elephant:\n        return <Elephant player={player} />;\n      case getChessType().Cannon:\n        return <Cannon player={player} />;\n      case getChessType().Horse:\n        return <Horse player={player} />;\n      case getChessType().Chariot:\n        return <Chariot player={player} />;\n      case getChessType().Soldier:\n        return <Soldier player={player} />;\n      default:\n        return null;\n    }\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Piece from \"./Piece.js\";\nimport King from \"./King.js\";\n// import getChessType from \"../helpers/getChessType\";\nimport getComponentByChessType from \"../helpers/getComponentByChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class Sqaure extends React.Component {\n  constructor(props) {\n    super(props);\n    const piece = this.props.piece;\n    console.log(\"Square this.props.piece: \" + this.props.piece);\n    // console.log(\n    //   \"ChessType.getChessType().King: \" + ChessType.getChessType().King\n    // );\n\n    const coord = { x: this.props.x, y: this.props.y };\n\n    this.state = {\n      isSelected: false,\n      piece: piece,\n      backgroundColor: \"none\",\n      borderColor: \"yellow\",\n      coord: coord,\n      highlight: this.props.highlight\n    };\n\n    // switch (piece) {\n    //   case ChessType.getChessType().King:\n    //     this.state = { piece: <King /> };\n    //     break;\n    //   default:\n    //     this.state = { piece: null };\n    // }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.piece !== prevProps.piece) {\n      this.setState({ piece: this.props.piece });\n    }\n\n    if (this.props.highlight !== prevProps.highlight) {\n      this.setState({ highlight: this.props.highlight });\n    }\n  }\n\n  render() {\n    // console.log(\"this props: \" + this.props);\n    return (\n      <button\n        className=\"square\"\n        onClick={this.onClick}\n        style={{\n          backgroundColor: this.state.backgroundColor,\n          borderColor: \"transparent\" //this.state.isSelected ? \"black\" : \"white\"\n        }}\n        // onFocus={this.onFocus}\n      >\n        {/* {this.state.hasPiece ? <Piece /> : null} */}\n        {/* {this.state.piece} */}\n        <div\n          className={\n            this.state.highlight && this.state.piece != null\n              ? this.state.piece.player === getPlayers().Red\n                ? \"highlight-piece-in-red\"\n                : \"highlight-piece\"\n              : \"unhighlight-square\"\n          }\n        >\n          {getComponentByChessType(this.state.piece)}\n        </div>\n      </button>\n    );\n  }\n\n  // highlight() {\n  //   this.setState({ backgroundColor: \"#ffba5e\" });\n  // }\n\n  // unhighlight() {\n  //   this.setState({ backgroundColor: \"#f9ead6\" });\n  // }\n\n  onClick = () => {\n    const x = this.props.x;\n    const y = this.props.y;\n    // console.log(\"x: \" + x + \", y: \" + y);\n\n    this.props.onClick(this);\n\n    // this.setKing(function() {\n    //   //   console.log(\"this.hasPiece(): \" + this.hasPiece());\n    //   if (!this.hasPiece()) {\n    //     console.log(\"This sq. has no Piece\");\n    //   } else {\n    //     console.log(\"This sq. has Piece\");\n    //   }\n    // });\n  };\n\n  setKing(fn) {\n    this.setState({ piece: <King /> }, fn);\n  }\n\n  hasPiece = () => {\n    if (this.state.piece != null) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  onFocus = () => {\n    console.log(\"this.hasPiece(): \" + this.hasPiece());\n    if (this.hasPiece()) {\n      this.setState({ borderColor: \"black\" });\n    }\n  };\n\n  select = () => {\n    this.setState({ isSelected: true });\n  };\n\n  unselect = () => {\n    this.setState({ isSelected: false });\n  };\n\n  // highlight() {\n  //   this.setState({ borderColor: \"black\" });\n  // }\n\n  // unhighlight() {\n  //   this.setState({ borderColor: \"white\" });\n  // }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Square from \"./Square.js\";\n\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(\"this.props.squares: \" + this.props.squares);\n    this.state = {\n      squares: this.props.squares,\n      unselect: this.props.unselect,\n      select: this.props.select\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(\"componentDidUpdate\");\n    // console.log(\"this.props.squares: \" + this.props.squares);\n    // console.log(\"prevProps.squares: \" + prevProps.squares);\n    if (this.props.squares !== prevProps.squares) {\n      // console.log(\"Board setState\");\n      this.setState({ squares: this.props.squares });\n    }\n\n    if (this.props.unselect !== prevProps.unselect) {\n      this.setState({ unselect: this.props.unselect });\n    }\n\n    if (this.props.select !== prevProps.select) {\n      this.setState({ select: this.props.select });\n    }\n  }\n\n  renderSquare(key, x, y, selected) {\n    // console.log(\"x: \" + x + \" y: \" + y);\n    // console.log(\n    //   \"this.props.squares[y][x]: \" + JSON.stringify(this.props.squares[y][x])\n    // );\n\n    return (\n      <Square\n        piece={this.state.squares[y][x]}\n        key={key}\n        x={x}\n        y={y}\n        onClick={sq => this.onClick(sq)}\n        setClick={click => (this.clickChild = click)}\n        highlight={selected}\n      />\n    );\n  }\n\n  onClick(sq) {\n    this.props.onClick(sq);\n  }\n\n  render() {\n    // console.log(\"select: \" + JSON.stringify(this.state.select));\n    // console.log(\"Board render(), this.state.squares: \" + this.state.squares);\n    const board = [];\n    for (let y = 9; y >= 0; y--) {\n      const squareRows = [];\n      for (let x = 0; x < 9; x++) {\n        const yS = y.toString();\n        const xS = x.toString();\n        const key = yS + xS;\n\n        const select = this.state.select;\n        var selected;\n        if (select != null) {\n          if (select.x == x && select.y == y) {\n            selected = true;\n          } else {\n            selected = false;\n          }\n        } else {\n          selected = false;\n        }\n\n        squareRows.push(this.renderSquare(key, x, y, selected));\n      }\n      board.push(\n        <div className=\"board-row\" key={y}>\n          {squareRows}\n        </div>\n      );\n    }\n    return <div>{board}</div>;\n  }\n}\n","import getPlayers from \"../helpers/getPlayers\";\nimport getChessType from \"../helpers/getChessType\";\n\nexport default function getChess(chessType, player, holderPosition) {\n  return {\n    chessType: chessType,\n    player: player,\n    holderPosition: holderPosition\n  };\n}\n","import getChessType from \"./getChessType\";\nimport getChess from \"./getChess\";\nimport getPlayers from \"./getPlayers\";\n\nexport default function initChessBoard(auto) {\n  console.log(\"initChessBoard\");\n  const squares = [\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null, null]\n  ];\n\n  const autoInitBoard = auto;\n\n  if (autoInitBoard) {\n    // Kings\n    squares[0][4] = getChess(getChessType().King, getPlayers().Red, {\n      y: 1,\n      x: 5\n    });\n\n    squares[9][4] = getChess(getChessType().King, getPlayers().Black, {\n      y: 0,\n      x: 5\n    });\n\n    // Advisors\n    squares[0][5] = getChess(getChessType().Advisor, getPlayers().Red, {\n      y: 1,\n      x: 4\n    });\n    squares[0][3] = getChess(getChessType().Advisor, getPlayers().Red, {\n      y: 1,\n      x: 6\n    });\n\n    squares[9][5] = getChess(getChessType().Advisor, getPlayers().Black, {\n      y: 0,\n      x: 4\n    });\n    squares[9][3] = getChess(getChessType().Advisor, getPlayers().Black, {\n      y: 0,\n      x: 6\n    });\n    // Elephants\n    squares[0][2] = getChess(getChessType().Elephant, getPlayers().Red, {\n      y: 1,\n      x: 3\n    });\n    squares[0][6] = getChess(getChessType().Elephant, getPlayers().Red, {\n      y: 1,\n      x: 7\n    });\n\n    squares[9][6] = getChess(getChessType().Elephant, getPlayers().Black, {\n      y: 0,\n      x: 3\n    });\n    squares[9][2] = getChess(getChessType().Elephant, getPlayers().Black, {\n      y: 0,\n      x: 7\n    });\n\n    // Cannons\n    squares[2][1] = getChess(getChessType().Cannon, getPlayers().Red, {\n      y: 0,\n      x: 2\n    });\n    squares[2][7] = getChess(getChessType().Cannon, getPlayers().Red, {\n      y: 1,\n      x: 2\n    });\n\n    squares[7][1] = getChess(getChessType().Cannon, getPlayers().Black, {\n      y: 0,\n      x: 2\n    });\n    squares[7][7] = getChess(getChessType().Cannon, getPlayers().Black, {\n      y: 1,\n      x: 2\n    });\n\n    // Horses\n    squares[0][1] = getChess(getChessType().Horse, getPlayers().Red, {\n      y: 0,\n      x: 1\n    });\n    squares[0][7] = getChess(getChessType().Horse, getPlayers().Red, {\n      y: 1,\n      x: 1\n    });\n\n    squares[9][1] = getChess(getChessType().Horse, getPlayers().Black, {\n      y: 0,\n      x: 1\n    });\n    squares[9][7] = getChess(getChessType().Horse, getPlayers().Black, {\n      y: 1,\n      x: 1\n    });\n\n    // Chariots\n    squares[0][0] = getChess(getChessType().Chariot, getPlayers().Red, {\n      y: 0,\n      x: 0\n    });\n    squares[0][8] = getChess(getChessType().Chariot, getPlayers().Red, {\n      y: 1,\n      x: 0\n    });\n\n    squares[9][0] = getChess(getChessType().Chariot, getPlayers().Black, {\n      y: 0,\n      x: 0\n    });\n    squares[9][8] = getChess(getChessType().Chariot, getPlayers().Black, {\n      y: 1,\n      x: 0\n    });\n\n    // Soldiers\n    squares[3][0] = getChess(getChessType().Soldier, getPlayers().Red, {\n      y: 0,\n      x: 3\n    });\n    squares[3][2] = getChess(getChessType().Soldier, getPlayers().Red, {\n      y: 0,\n      x: 4\n    });\n    squares[3][4] = getChess(getChessType().Soldier, getPlayers().Red, {\n      y: 0,\n      x: 5\n    });\n    squares[3][6] = getChess(getChessType().Soldier, getPlayers().Red, {\n      y: 0,\n      x: 6\n    });\n    squares[3][8] = getChess(getChessType().Soldier, getPlayers().Red, {\n      y: 0,\n      x: 7\n    });\n\n    squares[6][0] = getChess(getChessType().Soldier, getPlayers().Black, {\n      y: 1,\n      x: 3\n    });\n    squares[6][2] = getChess(getChessType().Soldier, getPlayers().Black, {\n      y: 1,\n      x: 4\n    });\n    squares[6][4] = getChess(getChessType().Soldier, getPlayers().Black, {\n      y: 1,\n      x: 5\n    });\n    squares[6][6] = getChess(getChessType().Soldier, getPlayers().Black, {\n      y: 1,\n      x: 6\n    });\n    squares[6][8] = getChess(getChessType().Soldier, getPlayers().Black, {\n      y: 1,\n      x: 7\n    });\n  }\n\n  return squares;\n}\n","import getChessType from \"../helpers/getChessType\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default function isMovePossible(src, dest, piece, squares) {\n  // //is attempting to place the selected chess\n  // if (this.squreHavePiece(sq)) {\n  //   //have a piece in square\n  //   //if is opponent chess\n  //   //eat\n  //   //else\n  //   //cannot place\n  // } else {\n  //   //empty square\n  //   //move selected chess from src to destination\n\n  //   const src = this.state.selectedSquare;\n  // }\n\n  const xDiff = getDiffFromSrcDest(src, dest).xDiff;\n  const yDiff = getDiffFromSrcDest(src, dest).yDiff;\n\n  if (xDiff === 0 && yDiff === 0) {\n    return false;\n  }\n\n  switch (piece.chessType) {\n    case getChessType().King:\n      if (piece.player == getPlayers().Red) {\n        if (\n          (dest.x == 3 || dest.x == 4 || dest.x == 5) &&\n          (dest.y == 0 || dest.y == 1 || dest.y == 2)\n        ) {\n          return (xDiff === 0 || xDiff === 1) && (yDiff === 0 || yDiff === 1);\n        } else {\n          return false;\n        }\n      } else {\n        if (\n          (dest.x == 3 || dest.x == 4 || dest.x == 5) &&\n          (dest.y == 7 || dest.y == 8 || dest.y == 9)\n        ) {\n          return (xDiff === 0 && yDiff === 1) || (xDiff === 1 && yDiff === 0);\n        } else {\n          return false;\n        }\n      }\n      break;\n\n    case getChessType().Advisor:\n      if (piece.player == getPlayers().Red) {\n        if (\n          (dest.x == 3 || dest.x == 4 || dest.x == 5) &&\n          (dest.y == 0 || dest.y == 1 || dest.y == 2)\n        ) {\n          return xDiff === 1 && yDiff === 1;\n        } else {\n          return false;\n        }\n      } else {\n        if (\n          (dest.x == 3 || dest.x == 4 || dest.x == 5) &&\n          (dest.y == 7 || dest.y == 8 || dest.y == 9)\n        ) {\n          return xDiff === 1 && yDiff === 1;\n        } else {\n          return false;\n        }\n      }\n      break;\n\n    case getChessType().Elephant:\n      if (piece.player == getPlayers().Red) {\n        if (\n          dest.y == 0 ||\n          dest.y == 1 ||\n          dest.y == 2 ||\n          dest.y == 3 ||\n          dest.y == 4\n        ) {\n          const direction = getDirectionFromSrcDest(src, dest);\n\n          const checkSpot =\n            squares[src.y + direction.yDir][src.x + direction.xDir];\n\n          if (checkSpot == null) {\n            return xDiff === 2 && yDiff === 2;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      } else {\n        if (\n          dest.y == 5 ||\n          dest.y == 6 ||\n          dest.y == 7 ||\n          dest.y == 8 ||\n          dest.y == 9\n        ) {\n          const direction = getDirectionFromSrcDest(src, dest);\n\n          const checkSpot =\n            squares[src.y + direction.yDir][src.x + direction.xDir];\n\n          if (checkSpot == null) {\n            return xDiff === 2 && yDiff === 2;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n\n      break;\n\n    case getChessType().Cannon:\n      if (xDiff === 0 || yDiff === 0) {\n        //moving in straight line\n        const destPiece = squares[dest.y][dest.x];\n        const srcPlayer = piece.player;\n\n        if (hasPieceBetween(src, dest, squares)) {\n          if (destPiece == null) {\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          //not has piece between\n          if (destPiece == null) {\n            //dest is empty\n            return true;\n          } else {\n            //dest is enemy\n            return false;\n          }\n        }\n      } else {\n        //moving in non-straight line\n        return false;\n      }\n\n      break;\n\n    case getChessType().Horse:\n      if ((xDiff === 1 && yDiff === 2) || (xDiff === 2 && yDiff === 1)) {\n        if (xDiff === 2) {\n          //check x\n          const dir = Math.sign(dest.x - src.x);\n\n          const checkSpotY = src.y;\n          const checkSpotX = src.x + dir;\n\n          const checkSpot = squares[checkSpotY][checkSpotX];\n\n          if (checkSpot == null) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          //check y\n          const dir = Math.sign(dest.y - src.y);\n\n          const checkSpotY = src.y + dir;\n          const checkSpotX = src.x;\n\n          const checkSpot = squares[checkSpotY][checkSpotX];\n\n          if (checkSpot == null) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        return false;\n      }\n      break;\n\n    case getChessType().Chariot:\n      if (xDiff === 0 || yDiff === 0) {\n        if (hasPieceBetween(src, dest, squares)) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return false;\n      }\n      break;\n\n    case getChessType().Soldier:\n      if (piece.player == getPlayers().Red) {\n        if (src.y <= 4) {\n          //not yet cross river\n          if (dest.y - src.y === 1 && xDiff === 0) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          //crossed river\n          if (!(xDiff === 1 && yDiff === 1) && !(dest.y - src.y === -1)) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        if (src.y > 4) {\n          //not yet cross river\n          if (dest.y - src.y === -1 && xDiff === 0) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          //crossed river\n          if (!(xDiff === 1 && yDiff === 1) && !(dest.y - src.y === 1)) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n      break;\n\n    default:\n  }\n}\n\nfunction hasPieceBetween(src, dest, squares) {\n  if (getDiffFromSrcDest(src, dest).xDiff === 0) {\n    // console.log(\"getDiffFromSrcDest.xDiff === 0\");\n    const x = src.x;\n    //moving along y\n    //src.y ... dest.y\n    const yDirection = getDirectionFromSrcDest(src, dest).yDir;\n\n    var hasPieceBetween = false;\n\n    for (var i = src.y + yDirection; i != dest.y; i = i + yDirection) {\n      console.log(\"hasPieceBetween i: \" + i);\n      const piece = squares[i][x];\n\n      if (piece != null) {\n        hasPieceBetween = true;\n      }\n    }\n\n    return hasPieceBetween;\n  } else if (getDiffFromSrcDest(src, dest).yDiff === 0) {\n    //moving along x\n    const y = src.y;\n    const xDirection = getDirectionFromSrcDest(src, dest).xDir;\n    var hasPieceBetween = false;\n\n    for (var i = src.x + xDirection; i != dest.x; i = i + xDirection) {\n      console.log(\"hasPieceBetween i: \" + i);\n      const piece = squares[y][i];\n\n      if (piece != null) {\n        hasPieceBetween = true;\n      }\n    }\n\n    return hasPieceBetween;\n  }\n}\n\nfunction getDiffFromSrcDest(src, dest) {\n  const xDiff = Math.abs(dest.x - src.x);\n  const yDiff = Math.abs(dest.y - src.y);\n\n  return { xDiff: xDiff, yDiff: yDiff };\n}\n\nfunction getDirectionFromSrcDest(src, dest) {\n  const yDir = Math.sign(dest.y - src.y);\n  const xDir = Math.sign(dest.x - src.x);\n  const direction = { xDir: xDir, yDir: yDir };\n  return direction;\n}\n","export default function getPieceByCoord(coord, squares) {\n  return squares[coord.y][coord.x];\n}\n","export default function getMoveOutcome(chessType, src, dest, squares) {\n  var newSquares = JSON.parse(JSON.stringify(squares));\n\n  newSquares[src.y][src.x] = null;\n\n  newSquares[dest.y][dest.x] = chessType;\n\n  return newSquares;\n}\n","import React from \"react\";\nimport \"../../index.css\";\n\nexport default class Board extends React.Component {\n  render() {\n    return (\n      <div className=\"display-board\">\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square-with-diagonal-top-right\" />\n        <div className=\"display-square-with-diagonal-top-left\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square-with-diagonal-top-left\" />\n        <div className=\"display-square-with-diagonal-top-right\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square-no-right-border\" />\n        <div className=\"display-square-no-vert-border\" />\n        <div className=\"display-square-no-vert-border\" />\n        <div className=\"display-square-no-vert-border\" />\n        <div className=\"display-square-no-vert-border\" />\n        <div className=\"display-square-no-vert-border\" />\n        <div className=\"display-square-no-vert-border\" />\n        <div className=\"display-square-no-left-border\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square-with-diagonal-top-right\" />\n        <div className=\"display-square-with-diagonal-top-left\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square-with-diagonal-top-left\" />\n        <div className=\"display-square-with-diagonal-top-right\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n        <div className=\"display-square\" />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport getComponentByChessType from \"../helpers/getComponentByChessType\";\nimport getChessType from \"../helpers/getChessType\";\nimport getChess from \"../helpers/getChess\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class ChessSquare extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\n      \"this.props.holderContent: \" + JSON.stringify(this.props.holderContent)\n    );\n\n    this.state = {\n      test: \"ChessHolder: test\",\n      id: this.props.id,\n      //   square: this.props.square,\n      //   piece: this.props.piece,\n      highlight: this.props.highlight,\n      data: {\n        square: this.props.square,\n        // piece: this.props.holderContent[this.props.square.y][\n        //   this.props.square.x\n        // ],\n        player: this.props.player,\n        holderContent: this.props.holderContent\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(\"componentDidUpdate\");\n    //   console.log(\"this.props.piece: \" + JSON.stringify(this.props.piece));\n    //   console.log(\"prevProps.piece: \" + JSON.stringify(prevProps.piece));\n    if (this.props.holderContent !== prevProps.holderContent) {\n      console.log(\"ChessHolder componentDidUpdate\");\n      //   this.setState({ holderContent: this.props.holderContent });\n      this.setState({\n        data: { ...this.state.data, holderContent: this.props.holderContent }\n      });\n    }\n\n    if (this.props.highlight !== prevProps.highlight) {\n      this.setState({\n        highlight: this.props.highlight\n      });\n    }\n  }\n\n  sqHasPiece() {\n    const sq = this.state.data.square;\n    const holderContent = this.state.data.holderContent;\n    const piece = holderContent[sq.y][sq.x];\n    return piece != null;\n  }\n\n  handleClick = () => {\n    // this.setState(this.setState({ data: { ...this.state.data, piece: null } }));\n    // return;\n    console.log(this.state.id);\n    // console.log(this.state.data.player);\n    // console.log(this.state.square);\n    this.props.onSelect(this.state.data);\n  };\n\n  render() {\n    var piece;\n    if (\n      this.state.data.holderContent != null &&\n      this.state.data.holderContent.length != 0\n    ) {\n      piece = this.state.data.holderContent[this.state.data.square.y][\n        this.state.data.square.x\n      ];\n    } else {\n      piece = null;\n    }\n\n    // console.log(\n    //   \"this.state.data: \" +\n    //     JSON.stringify(\n    //       this.state.data.holderContent[this.state.data.square.y][\n    //         this.state.data.square.x\n    //       ]\n    //     )\n    // );\n    return (\n      <div className=\"chess-square\" onClick={this.handleClick}>\n        <div\n          className={\n            this.state.highlight && piece != null\n              ? piece.player === getPlayers().Red\n                ? \"highlight-piece-in-red\"\n                : \"highlight-piece\"\n              : \"unhighlight-square\"\n          }\n        >\n          {getComponentByChessType(piece)}\n        </div>\n      </div>\n    );\n  }\n\n  //   removePiece = () => {\n  //       this.setState({data: {...this.state.data, piece: null}})\n  //   }\n}\n\n// Black\n// 00 01 02 03 04 05 06 07\n// ch h  c  e  g  k  g  e\n// 10 11 12 13 14 15 16 17\n// ch h  c  s  s  s  s  s\n\n// Red\n// 00 01 02 03 04 05 06 07\n// ch h  c  s  s  s  s  s\n// 10 11 12 13 14 15 16 17\n// ch h  c  e  g  k  g  e\n","import React from \"react\";\nimport \"../index.css\";\nimport ChessSquare from \"./ChessSquare\";\nimport getChessType from \"../helpers/getChessType\";\nimport getChess from \"../helpers/getChess\";\nimport getPlayers from \"../helpers/getPlayers\";\n\nexport default class ChessHolder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      player: this.props.player,\n      holderContent: this.props.holderContent,\n      selected: this.props.selected\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(\"componentDidUpdate\");\n    // console.log(\n    //   \"this.props.holderContent: \" + JSON.stringify(this.props.holderContent)\n    // );\n    // console.log(\n    //   \"prevProps.holderContent: \" + JSON.stringify(prevProps.holderContent)\n    // );\n    if (this.props.holderContent !== prevProps.holderContent) {\n      //   console.log(\"ChessHolder componentDidUpdate\");\n      this.setState({ holderContent: this.props.holderContent });\n    }\n\n    if (this.props.selected !== prevProps.selected) {\n      this.setState({ selected: this.props.selected });\n    }\n  }\n\n  //   defaultContent =\n  //     this.props.player == getPlayers().Black\n  //       ? [\n  //           [\n  //             getChess(getChessType().Chariot, getPlayers().Black),\n  //             getChess(getChessType().Horse, getPlayers().Black),\n  //             getChess(getChessType().Cannon, getPlayers().Black),\n  //             getChess(getChessType().Elephant, getPlayers().Black),\n  //             getChess(getChessType().Advisor, getPlayers().Black),\n  //             getChess(getChessType().King, getPlayers().Black),\n  //             getChess(getChessType().Advisor, getPlayers().Black),\n  //             getChess(getChessType().Elephant, getPlayers().Black)\n  //           ],\n  //           [\n  //             getChess(getChessType().Chariot, getPlayers().Black),\n  //             getChess(getChessType().Horse, getPlayers().Black),\n  //             getChess(getChessType().Cannon, getPlayers().Black),\n  //             getChess(getChessType().Soldier, getPlayers().Black),\n  //             getChess(getChessType().Soldier, getPlayers().Black),\n  //             getChess(getChessType().Soldier, getPlayers().Black),\n  //             getChess(getChessType().Soldier, getPlayers().Black),\n  //             getChess(getChessType().Soldier, getPlayers().Black)\n  //           ]\n  //         ]\n  //       : [\n  //   [\n  //     getChess(getChessType().Chariot, getPlayers().Red),\n  //     getChess(getChessType().Horse, getPlayers().Red),\n  //     getChess(getChessType().Cannon, getPlayers().Red),\n  //     getChess(getChessType().Soldier, getPlayers().Red),\n  //     getChess(getChessType().Soldier, getPlayers().Red),\n  //     getChess(getChessType().Soldier, getPlayers().Red),\n  //     getChess(getChessType().Soldier, getPlayers().Red),\n  //     getChess(getChessType().Soldier, getPlayers().Red)\n  //   ],\n  //   [\n  //     getChess(getChessType().Chariot, getPlayers().Red),\n  //     getChess(getChessType().Horse, getPlayers().Red),\n  //     getChess(getChessType().Cannon, getPlayers().Red),\n  //     getChess(getChessType().Elephant, getPlayers().Red),\n  //     getChess(getChessType().Advisor, getPlayers().Red),\n  //     getChess(getChessType().King, getPlayers().Red),\n  //     getChess(getChessType().Advisor, getPlayers().Red),\n  //     getChess(getChessType().Elephant, getPlayers().Red)\n  //   ]\n  // ];\n\n  onSelect = sqData => {\n    // console.log(\"selecting square: \" + square);\n    this.onPieceSelected(sqData);\n  };\n\n  generateRow(y, selected) {\n    const row = [];\n    for (let x = 0; x <= 7; x++) {\n      const yS = y.toString();\n      const xS = x.toString();\n      const key = yS + xS;\n      const square = { x: x, y: y };\n      //   console.log(square);\n\n      var highlight = false;\n      if (selected != null && selected.y == y && selected.x == x) {\n        highlight = true;\n      }\n      row.push(\n        <ChessSquare\n          key={key}\n          id={key}\n          square={square}\n          onSelect={this.onSelect}\n          holderContent={this.state.holderContent}\n          player={this.state.player}\n          highlight={highlight}\n        />\n      );\n    }\n    return row;\n  }\n\n  generateRows(selected) {\n    return [this.generateRow(0, selected), this.generateRow(1, selected)];\n  }\n\n  render() {\n    console.log(\"ChessHolder render()\");\n    return (\n      <div className=\"chess-parent-container\">\n        <div className=\"chess-container\">\n          <div className=\"board-row\">\n            {this.generateRows(this.state.selected)}\n          </div>\n        </div>\n        {/* <button onClick={this.test}>Test</button> */}\n      </div>\n    );\n  }\n\n  test = () => {\n    // console.log(\"test\");\n    if (this.state.holderContent != null) {\n      this.state.holderContent[0][0] = null;\n\n      //   let copy = JSON.parse(JSON.stringify(this.state.holderContent));\n      //   copy[0][0] = null;\n\n      this.setState({ holderContent: this.state.holderContent });\n    }\n  };\n\n  removePieceAt(sq) {\n    let copy = JSON.parse(JSON.stringify(this.state.holderContent));\n    copy[sq.y][sq.x] = null;\n\n    this.setState({ holderContent: copy });\n  }\n\n  onPieceSelected = sqData => {\n    // console.log(\"ChessHolder onPieceSelected\");\n    this.props.onPieceSelected(sqData);\n  };\n\n  //   addPieceToHolder = () => {\n  //     console.log(\"ChessHolder addPieceToHolder\");\n  //   };\n\n  removePiece = data => {\n    // data.square\n  };\n}\n","import getPlayers from \"../helpers/getPlayers\";\nimport getChessType from \"../helpers/getChessType\";\nimport getChess from \"../helpers/getChess\";\nexport default function getDefaultHolderContent() {\n  return {\n    Black: [\n      [\n        getChess(getChessType().Chariot, getPlayers().Black, { y: 0, x: 0 }),\n        getChess(getChessType().Horse, getPlayers().Black, { y: 0, x: 1 }),\n        getChess(getChessType().Cannon, getPlayers().Black, { y: 0, x: 2 }),\n        getChess(getChessType().Elephant, getPlayers().Black, { y: 0, x: 3 }),\n        getChess(getChessType().Advisor, getPlayers().Black, { y: 0, x: 4 }),\n        getChess(getChessType().King, getPlayers().Black, { y: 0, x: 5 }),\n        getChess(getChessType().Advisor, getPlayers().Black, { y: 0, x: 6 }),\n        getChess(getChessType().Elephant, getPlayers().Black, { y: 0, x: 7 })\n      ],\n      [\n        getChess(getChessType().Chariot, getPlayers().Black, { y: 1, x: 0 }),\n        getChess(getChessType().Horse, getPlayers().Black, { y: 1, x: 1 }),\n        getChess(getChessType().Cannon, getPlayers().Black, { y: 1, x: 2 }),\n        getChess(getChessType().Soldier, getPlayers().Black, { y: 1, x: 3 }),\n        getChess(getChessType().Soldier, getPlayers().Black, { y: 1, x: 4 }),\n        getChess(getChessType().Soldier, getPlayers().Black, { y: 1, x: 5 }),\n        getChess(getChessType().Soldier, getPlayers().Black, { y: 1, x: 6 }),\n        getChess(getChessType().Soldier, getPlayers().Black, { y: 1, x: 7 })\n      ]\n    ],\n    Red: [\n      [\n        getChess(getChessType().Chariot, getPlayers().Red, { y: 0, x: 0 }),\n        getChess(getChessType().Horse, getPlayers().Red, { y: 0, x: 1 }),\n        getChess(getChessType().Cannon, getPlayers().Red, { y: 0, x: 2 }),\n        getChess(getChessType().Soldier, getPlayers().Red, { y: 0, x: 3 }),\n        getChess(getChessType().Soldier, getPlayers().Red, { y: 0, x: 4 }),\n        getChess(getChessType().Soldier, getPlayers().Red, { y: 0, x: 5 }),\n        getChess(getChessType().Soldier, getPlayers().Red, { y: 0, x: 6 }),\n        getChess(getChessType().Soldier, getPlayers().Red, { y: 0, x: 7 })\n      ],\n      [\n        getChess(getChessType().Chariot, getPlayers().Red, { y: 1, x: 0 }),\n        getChess(getChessType().Horse, getPlayers().Red, { y: 1, x: 1 }),\n        getChess(getChessType().Cannon, getPlayers().Red, { y: 1, x: 2 }),\n        getChess(getChessType().Elephant, getPlayers().Red, { y: 1, x: 3 }),\n        getChess(getChessType().Advisor, getPlayers().Red, { y: 1, x: 4 }),\n        getChess(getChessType().King, getPlayers().Red, { y: 1, x: 5 }),\n        getChess(getChessType().Advisor, getPlayers().Red, { y: 1, x: 6 }),\n        getChess(getChessType().Elephant, getPlayers().Red, { y: 1, x: 7 })\n      ]\n    ]\n  };\n}\n","import React from \"react\";\nimport \"../index.css\";\nimport Board from \"./Board.js\";\nimport Square from \"./Square.js\";\nimport King from \"./King.js\";\nimport initChessBoard from \"../helpers/initChessBoard\";\nimport getMovePossibleByChessType from \"../helpers/getMovePossibleByChessType\";\nimport getPieceByCoord from \"../helpers/getPieceByCoord\";\nimport getMoveOutcome from \"../helpers/getMoveOutcome\";\nimport { thisTypeAnnotation } from \"@babel/types\";\nimport getPlayers from \"../helpers/getPlayers\";\nimport DisplayBoard from \"./ui/Board\";\nimport ChessHolder from \"./ChessHolder.js\";\nimport getOutcomeAfterAddPiece from \"../helpers/getOutcomeAfterAddPiece\";\nimport getChessType from \"../helpers/getChessType\";\nimport getChess from \"../helpers/getChess\";\nimport getOutcomeAfterRemovePiece from \"../helpers/getOutcomeAfterRemovePiece\";\nimport getDefaultHolderContent from \"../helpers/getDefaultHolderContent\";\nimport getEmptyHolderContent from \"../helpers/getEmptyHolderContent\";\n\nexport default class Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: initChessBoard(true),\n      isSelectingChess: true, //false when placing chess to destination\n      selectedSquare: null, //a square\n      unselect: null, //a coordinate\n      select: null, //a coordinate\n      turn: getPlayers().Red,\n      selectedHolderSqData: null,\n      // holderContent: this.holderContent\n      redHolderContent: getEmptyHolderContent(),\n      blackHolderContent: getEmptyHolderContent()\n    };\n  }\n\n  componentDidMount() {\n    this.enterAutoInitMode();\n  }\n\n  enterAutoInitMode = () => {\n    const squares = initChessBoard(true);\n    this.redHolderContent = getEmptyHolderContent();\n    this.blackHolderContent = getEmptyHolderContent();\n\n    this.setState({\n      squares: squares,\n      redHolderContent: this.redHolderContent,\n      blackHolderContent: this.blackHolderContent,\n      turn: getPlayers().Red\n    });\n  };\n\n  enterCustomMode = () => {\n    const squares = initChessBoard(false);\n    this.redHolderContent = getDefaultHolderContent().Red;\n    this.blackHolderContent = getDefaultHolderContent().Black;\n\n    this.setState({\n      squares: squares,\n      redHolderContent: this.redHolderContent,\n      blackHolderContent: this.blackHolderContent,\n      turn: getPlayers().Red\n    });\n  };\n\n  toggleTurn() {\n    const turn = this.state.turn;\n\n    if (turn === getPlayers().Red) {\n      this.setState({\n        turn: getPlayers().Black\n      });\n    } else {\n      this.setState({\n        turn: getPlayers().Red\n      });\n    }\n  }\n\n  isSelectingChess() {\n    if (this.state.isSelectingChess) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isPlacingPiece() {\n    if (this.state.isSelectingChess) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  squreHavePiece(sq) {\n    if (sq.state.piece === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  activateSquare(coord) {}\n\n  deactivateSquare(coord) {}\n\n  handleClick(sq) {\n    // console.log(\"sq.state.piece: \" + JSON.stringify(sq.state.piece));\n    // console.log(\"this.isSelectingChess(): \" + this.isSelectingChess());\n\n    console.log(\"sq: \" + JSON.stringify(sq.state));\n\n    var squares = this.state.squares;\n\n    const coord = sq.state.coord;\n\n    const turn = this.state.turn;\n\n    console.log(\n      \"this.state.selectedHolderSqData: \" + this.state.selectedHolderSqData\n    );\n    console.log(\"!this.squreHavePiece(sq): \" + !this.squreHavePiece(sq));\n\n    if (this.state.selectedHolderSqData != null && !this.squreHavePiece(sq)) {\n      //place piece\n      console.log(\"Place piece\");\n      const outcome = getOutcomeAfterAddPiece(\n        this.state.selectedHolderSqData,\n        coord,\n        squares\n      );\n\n      this.addPieceToBoard(this.state.selectedHolderSqData, outcome);\n\n      // this.removePieceFromHolder(this.state.selectedHolderSqData);\n\n      // this.setState({ squares: outcome, selectedHolderSqData: null });\n    } else {\n      if (this.isSelectingChess()) {\n        if (this.squreHavePiece(sq)) {\n          const piece = getPieceByCoord(coord, squares);\n\n          const pieceColor = piece.player;\n\n          if (pieceColor === turn) {\n            //G01\n            console.log(\"G01: selecting your chess\");\n            //is this color's turn\n\n            this.setState({ select: coord }, function() {\n              this.setState({ isSelectingChess: false });\n            });\n          } else {\n            //G02\n            console.log(\"G02: cannot select opponent chess\");\n            //is the other color's turn\n          }\n\n          // A. selecting chess, have piece\n\n          // const prevSelectedSq = this.state.selectedSquare;\n          // var unselectCoord;\n          // if (prevSelectedSq == null) {\n          //   //no need to unselect\n          //   unselectCoord = null;\n          // } else {\n          //   //unselect prev sq\n          //   unselectCoord = prevSelectedSq.state.coord;\n          // }\n          // console.log(\"sq.state.coord: \" + JSON.stringify(sq.state.coord));\n          // //selected a square containaing a piece\n          // this.setState({ selectedSquare: sq }, function() {\n          //   this.state.isSelectingChess = false;\n          //   this.state.unselect = unselectCoord;\n          // });\n        } else {\n          //G03\n          console.log(\"G03: cannot select empty square\");\n          // B. selecting chess, not have piece\n          //selecting an empty square\n          // console.log(\"sq.state.coord: \" + JSON.stringify(sq.state.coord));\n          // console.log(\"Cannot select square because it is empty\");\n        }\n      } else {\n        const piece = getPieceByCoord(coord, squares);\n        // const pieceColor = piece.player;\n\n        if (piece !== null && piece.player === turn) {\n          //G04: selecting another chess\n          console.log(\"G04: selecting another chess\");\n          this.setState({ select: coord }, function() {\n            this.setState({ isSelectingChess: false });\n          });\n        } else {\n          const src = this.state.select;\n          const srcPeice = getPieceByCoord(src, squares);\n          const srcChessType = srcPeice.chessType;\n\n          const dest = sq.state.coord;\n\n          const isMovePossible = getMovePossibleByChessType(\n            src,\n            dest,\n            srcPeice,\n            squares\n          );\n\n          if (isMovePossible) {\n            if (this.squreHavePiece(sq)) {\n              //G06: eating opponent chess\n              console.log(\"G06: eating opponent chess\");\n              const outcome = getMoveOutcome(srcPeice, src, dest, squares);\n\n              const destPiece = getPieceByCoord(dest, squares);\n              if (destPiece != null) {\n                // TODO: store fallen piece\n                const holderPosition = destPiece.holderPosition;\n                const player = destPiece.player;\n\n                if (player == getPlayers().Black) {\n                  // modify blackholdercontent\n                  this.blackHolderContent[holderPosition.y][\n                    holderPosition.x\n                  ] = destPiece;\n\n                  this.setState({\n                    blackHolderContent: this.blackHolderContent\n                  });\n                } else {\n                  this.redHolderContent[holderPosition.y][\n                    holderPosition.x\n                  ] = destPiece;\n\n                  this.setState({ redHolderContent: this.redHolderContent });\n                }\n              }\n\n              this.setState(\n                {\n                  squares: outcome,\n                  select: null\n                },\n                function() {\n                  this.setState({ isSelectingChess: true });\n                  this.toggleTurn();\n                }\n              );\n            } else {\n              //G05: moving chess to empty square\n              console.log(\"G05: moving chess to empty square\");\n              const outcome = getMoveOutcome(srcPeice, src, dest, squares);\n              this.setState(\n                {\n                  squares: outcome,\n                  select: null\n                },\n                function() {\n                  this.setState({ isSelectingChess: true });\n                  this.toggleTurn();\n                }\n              );\n            }\n          } else {\n            //G08: cannot make such move\n            console.log(\"G08: cannot make such move\");\n            this.setState({ isSelectingChess: false });\n          }\n        }\n\n        //determine if is a valid move\n        // const chessType = this.state.selectedSquare.state.piece;\n        // const src = this.state.selectedSquare.state.coord;\n        // const dest = sq.state.coord;\n        // console.log(\n        //   \"chessType: \" + chessType + \", src: \" + src + \", dest:\" + dest\n        // );\n        // const isMovePossible = getMovePossibleByChessType(\n        //   src,\n        //   dest,\n        //   chessType,\n        //   squares\n        // );\n        // console.log(\"isMovePossible: \" + isMovePossible);\n        // if (isMovePossible) {\n        //   // C. making move, valid move\n        //   //if move possible\n        //   const srcPiece = getPieceByCoord(src, squares);\n        //   const destPiece = getPieceByCoord(dest, squares);\n        //   if (destPiece != null) {\n        //     // TODO: store fallen piece\n        //   }\n        //   // console.log(\"this.state.squares: \" + this.state.squares);\n        //   //this.state.squares: 1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n        //   // var newSquares = JSON.parse(JSON.stringify(this.state.squares));\n        //   // newSquares[src.y][src.x] = null;\n        //   // newSquares[dest.y][dest.x] = chessType;\n        //   // console.log(\"this.state.squares: \" + this.state.squares);\n        //   // this.state.squares: ,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n        //   const outcome = getMoveOutcome(chessType, src, dest, squares);\n        //   this.setState(\n        //     {\n        //       squares: outcome\n        //     },\n        //     function() {\n        //       this.setState({ isSelectingChess: true });\n        //     }\n        //   );\n        //   } else {\n        //     // D. making move, invalid move\n        //     //if move not possible\n        //     this.setState({ isSelectingChess: false });\n        //   }\n      }\n    }\n\n    // if (sq.state.piece === null) {\n    //   //no piece in the sq\n    //   return;\n    // } else {\n    //   // have piece in the sq\n    // }\n  }\n\n  onChessHolderPieceSelected = selectedHolderSqData => {\n    // console.log(\n    //   \"Game onChessHolderPieceSelected piece: \" + JSON.stringify(piece)\n    // );\n\n    // const player = selectedHolderSqData.player;\n\n    // const selectedCoord = this.state.select;\n\n    // if (selectedCoord != null) {\n    //   const selectedPiece = getPieceByCoord(selectedCoord, this.state.squares);\n    //   if (\n    //     selectedHolderSqData.holderContent[selectedHolderSqData.square.y][\n    //       selectedHolderSqData.square.x\n    //     ] != null ||\n    //     player != selectedPiece.player\n    //   ) {\n    //     //holder sq has piece or is opposite player holder\n    //     //select it\n    //     this.setState({ selectedHolderSqData: selectedHolderSqData });\n    //   } else {\n    //     // holder sq is empty\n    //     // put piece from board to holder\n    //     const holderSq = selectedHolderSqData.square;\n    //     const outcome = getOutcomeAfterRemovePiece(\n    //       selectedCoord,\n    //       this.state.squares\n    //     );\n\n    //     if (player == getPlayers().Black) {\n    //       this.blackHolderContent[holderSq.y][holderSq.x] = selectedPiece;\n    //       this.setState({\n    //         squares: outcome,\n    //         blackHolderContent: this.blackHolderContent,\n    //         isSelectingChess: true\n    //       });\n    //     } else {\n    //       this.redHolderContent[holderSq.y][holderSq.x] = selectedPiece;\n    //       this.setState({\n    //         squares: outcome,\n    //         redHolderContent: this.redHolderContent,\n    //         isSelectingChess: true\n    //       });\n    //     }\n    //   }\n    // } else {\n    //pick the piece in holder\n    var holderSqHasPiece;\n\n    if (\n      selectedHolderSqData.holderContent.length == 0 ||\n      selectedHolderSqData.holderContent.length == null\n    ) {\n      holderSqHasPiece = false;\n    } else if (\n      selectedHolderSqData.holderContent[selectedHolderSqData.square.y][\n        selectedHolderSqData.square.x\n      ] == null\n    ) {\n      holderSqHasPiece = false;\n    } else {\n      holderSqHasPiece = true;\n    }\n\n    //   if (selectedHolderSqData.holderContent.length == 0 || selectedHolderSqData.holderContent.length == null){\n    //     c\n    //   }else if (selectedHolderSqData.holderContent[selectedHolderSqData.square.y][\n    //     selectedHolderSqData.square.x\n    //   ] == null){\n    //   holderSqHasPiece = false\n    // }else{\n    //     holderSqHasPiece = true\n    //   }\n\n    if (holderSqHasPiece) {\n      this.setState({ selectedHolderSqData: selectedHolderSqData });\n    }\n\n    // }\n  };\n\n  removePieceFromHolder(selectedHolderSqData) {\n    const x = selectedHolderSqData.square.x;\n    const y = selectedHolderSqData.square.y;\n  }\n\n  onAutoStartBtnClicked = () => {\n    this.enterAutoInitMode();\n  };\n\n  onCustomizeBtnClicked = () => {\n    this.enterCustomMode();\n  };\n\n  render() {\n    // console.log(\"this.state.squares: \" + this.state.squares);\n    return (\n      <div>\n        <div className=\"btns-container\">\n          {/* <div className=\"center\"> */}\n          <button className=\"btn\" onClick={this.onAutoStartBtnClicked}>\n            Auto Start\n          </button>\n          <button className=\"btn\" onClick={this.onCustomizeBtnClicked}>\n            Customize\n          </button>\n          {/* </div> */}\n        </div>\n\n        <ChessHolder\n          onPieceSelected={this.onChessHolderPieceSelected}\n          player={getPlayers().Black}\n          holderContent={this.state.blackHolderContent}\n          selected={\n            this.state.selectedHolderSqData != null\n              ? this.state.selectedHolderSqData.player == getPlayers().Black\n                ? this.state.selectedHolderSqData.square\n                : null\n              : null\n          }\n        />\n        <div className=\"game\">\n          <DisplayBoard />\n          <div className=\"game-board\">\n            <Board\n              squares={this.state.squares}\n              onClick={sq => this.handleClick(sq)}\n              unselect={this.state.unselect}\n              select={this.state.select}\n            />\n          </div>\n        </div>\n        <ChessHolder\n          onPieceSelected={this.onChessHolderPieceSelected}\n          player={getPlayers().Red}\n          holderContent={this.state.redHolderContent}\n          selected={\n            this.state.selectedHolderSqData != null\n              ? this.state.selectedHolderSqData.player == getPlayers().Red\n                ? this.state.selectedHolderSqData.square\n                : null\n              : null\n          }\n        />\n      </div>\n    );\n  }\n\n  // holderContent = {\n  //   Black: [\n  //     [\n  //       getChess(getChessType().Chariot, getPlayers().Black),\n  //       getChess(getChessType().Horse, getPlayers().Black),\n  //       getChess(getChessType().Cannon, getPlayers().Black),\n  //       getChess(getChessType().Elephant, getPlayers().Black),\n  //       getChess(getChessType().Advisor, getPlayers().Black),\n  //       getChess(getChessType().King, getPlayers().Black),\n  //       getChess(getChessType().Advisor, getPlayers().Black),\n  //       getChess(getChessType().Elephant, getPlayers().Black)\n  //     ],\n  //     [\n  //       getChess(getChessType().Chariot, getPlayers().Black),\n  //       getChess(getChessType().Horse, getPlayers().Black),\n  //       getChess(getChessType().Cannon, getPlayers().Black),\n  //       getChess(getChessType().Soldier, getPlayers().Black),\n  //       getChess(getChessType().Soldier, getPlayers().Black),\n  //       getChess(getChessType().Soldier, getPlayers().Black),\n  //       getChess(getChessType().Soldier, getPlayers().Black),\n  //       getChess(getChessType().Soldier, getPlayers().Black)\n  //     ]\n  //   ],\n  //   Red: [\n  //     [\n  //       getChess(getChessType().Chariot, getPlayers().Red),\n  //       getChess(getChessType().Horse, getPlayers().Red),\n  //       getChess(getChessType().Cannon, getPlayers().Red),\n  //       getChess(getChessType().Soldier, getPlayers().Red),\n  //       getChess(getChessType().Soldier, getPlayers().Red),\n  //       getChess(getChessType().Soldier, getPlayers().Red),\n  //       getChess(getChessType().Soldier, getPlayers().Red),\n  //       getChess(getChessType().Soldier, getPlayers().Red)\n  //     ],\n  //     [\n  //       getChess(getChessType().Chariot, getPlayers().Red),\n  //       getChess(getChessType().Horse, getPlayers().Red),\n  //       getChess(getChessType().Cannon, getPlayers().Red),\n  //       getChess(getChessType().Elephant, getPlayers().Red),\n  //       getChess(getChessType().Advisor, getPlayers().Red),\n  //       getChess(getChessType().King, getPlayers().Red),\n  //       getChess(getChessType().Advisor, getPlayers().Red),\n  //       getChess(getChessType().Elephant, getPlayers().Red)\n  //     ]\n  //   ]\n  // };\n\n  blackHolderContent = getDefaultHolderContent().Black;\n\n  redHolderContent = getDefaultHolderContent().Red;\n\n  addPieceToBoard(holderSqData, outcome) {\n    const sq = holderSqData.square;\n\n    const player = holderSqData.player;\n\n    if (player == getPlayers().Black) {\n      this.blackHolderContent[sq.y][sq.x] = null;\n      this.setState({\n        blackHolderContent: this.blackHolderContent,\n        squares: outcome,\n        selectedHolderSqData: null,\n        isSelectingChess: true\n      });\n    } else {\n      this.redHolderContent[sq.y][sq.x] = null;\n      this.setState({\n        redHolderContent: this.redHolderContent,\n        squares: outcome,\n        selectedHolderSqData: null,\n        isSelectingChess: true\n      });\n    }\n  }\n\n  removePieceFromBoardToHolder() {}\n\n  // removePieceFromHolder(holderSqData) {\n  //   const sq = holderSqData.square;\n\n  //   const player = holderSqData.player;\n\n  //   console.log(\n  //     \"Game removePieceFromHolder player: \" +\n  //       player +\n  //       \"sq: \" +\n  //       JSON.stringify(sq)\n  //   );\n\n  //   if (player == getPlayers().Black) {\n  //     this.blackHolderContent[sq.y][sq.x] = null;\n  //     this.setState({\n  //       blackHolderContent: this.blackHolderContent\n  //     });\n  //   } else {\n  //     this.redHolderContent[sq.y][sq.x] = null;\n  //     this.setState({\n  //       redHolderContent: this.redHolderContent\n  //     });\n  //   }\n\n  //   // if (player == getPlayers().Black) {\n  //   //   this.holderContent.Black[sq.y][sq.x] = null;\n  //   //   console.log(\n  //   //     \"Game removePieceFromHolder this.holderContent.Black[sq.y][sq.x]: \" +\n  //   //       JSON.stringify(this.holderContent.Black[sq.y][sq.x])\n  //   //   );\n  //   // } else {\n  //   //   this.holderContent.Red[sq.y][sq.x] = null;\n  //   //   console.log(\n  //   //     \"Game removePieceFromHolder this.holderContent.Red[sq.y][sq.x]: \" +\n  //   //       JSON.stringify(this.holderContent.Red[sq.y][sq.x])\n  //   //   );\n  //   // }\n\n  //   // console.log(\n  //   //   \"Game removePieceFromHolder holderContent: \" +\n  //   //     JSON.stringify(this.holderContent)\n  //   // );\n\n  //   // var newHolderContent = JSON.parse(JSON.stringify(this.holderContent));\n  // }\n}\n","// import getPlayers from \"../helpers/getPlayers\";\n// import getChessType from \"../helpers/getChessType\";\n// import getChess from \"../helpers/getChess\";\nexport default function getDefaultHolderContent() {\n  return [\n    [null, null, null, null, null, null, null, null],\n    [null, null, null, null, null, null, null, null]\n  ];\n}\n","export default function getOutcomeAfterAddPiece(sqData, dest, squares) {\n  var newSquares = JSON.parse(JSON.stringify(squares));\n\n  console.log(\"dest.y: \" + JSON.stringify(dest.y));\n  console.log(\"dest.x: \" + JSON.stringify(dest.x));\n\n  console.log(\"sqData: \" + JSON.stringify(sqData));\n\n  newSquares[dest.y][dest.x] =\n    sqData.holderContent[sqData.square.y][sqData.square.x];\n\n  return newSquares;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Game from \"./components/Game.js\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}